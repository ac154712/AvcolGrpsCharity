@model PaginatedList<AvcolGrpsCharity.Models.SignedCharityGrps> // The model is a paginated list of SignedCharityGrps

@{
    ViewData["Title"] = "Index"; // Setting the page title
}

<h1>Signed Charity Groups</h1> 

<p>
    <a asp-action="Create">Create New</a> 
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /> 
            <input type="submit" value="Search" class="btn btn-default" /> | 
            <a asp-action="Index">Back to Full List</a> 
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Charity Group Name</a>
            </th>
            <th>
                Description
            </th>
            <th>
                Email 
            </th>
            <th>
                Phone Number 
            </th>
            <th></th> 
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        { // Loop through each item in the model
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ChartyGrp_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CharityGrp_description) 
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CharityGrp_email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CharityGrp_phone) 
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CharityGrpID">Edit</a> | 
                    <a asp-action="Details" asp-route-id="@item.CharityGrpID">Details</a> | 
                    <a asp-action="Delete" asp-route-id="@item.CharityGrpID">Delete</a> |
                    <a asp-controller="Donations" asp-action="Index">Donate</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : ""; // Determine if the previous button should be disabled
    var nextDisabled = !Model.HasNextPage ? "disabled" : ""; // Determine if the next button should be disabled
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Back 
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next 
</a>
